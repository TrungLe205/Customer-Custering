setwd("~/Documents/DATA SCIENTIST/Marketing/Clustering Customer/Data")
library(scales)
library(ggplot2)
library(grid)
library(Hmisc)
library(data.table)
library(reshape2)
library(lubridate)
library(mclust)
library(mix)
library(zoo)
colNames <- c("trans_date", "cust_id", "age", "area", "prod_cat", "prod_id", "quantity", "asset", "price")
dat1 <- read.csv("D01.csv")
colnames(dat1) <- colNames
dat2 <- read.csv("D02.csv")
colnames(dat2) <- colNames
dat3 <- read.csv("D11.csv")
colnames(dat3) <- colNames
dat4 <- read.csv("D12.csv")
colnames(dat4) <- colNames
dat <- rbind(dat1, dat2, dat3, dat4)
str(dat)
dat[, 1:6] <- sapply(dat[, 1:6], as.character)
dat[, 7:9] <- sapply(dat[, 7:9], as.numeric)
dat$trans_date <- as.Date(dat$trans_date)
dat$age <- as.factor(dat$age)
dat$area <- as.factor(dat$area)
dat$prod_cat <- as.factor(dat$prod_cat)
dat$prod_id <- as.factor(dat$prod_id)
ageGroup <- ifelse(dat$age == "A", "<25", ifelse( dat$age == "B", "25-29", ifelse(dat$age == "C", "30-34", ifelse(dat$age == "D", "35-39", ifelse(dat$age == "E", "40-44", ifelse(dat$age == "F", "45-49", ifelse(dat$age == "G", "50-54", ifelse(dat$age == "H", "55-59", ifelse(dat$age == "I", "60-64", ">65")))))))))
dat <- cbind(dat,ageGroup)
write.csv(dat, file = "TaFeng.csv")
str(dat)
### Exploration
library(ggplot2)
# How many transactions, dats, customers, product_id and product subclasses?
dat$trans_id <- seq(1, nrow(dat),1)
dt <- data.table(dat)
is.data.table(dt)
nrow(dt)
num_trans <- nrow(dt[,1,by = trans_date])
nrow(dt[,1,by = cust_id])
nrow(dt[,1,by = prod_cat])
nrow(dt[,1,by = prod_id])
dtnums <- dt[,list(cust_id, age = as.numeric(age), area = as.numeric(area))]
dtnums <- dtnums[,list(age = mean(age), area = mean(area)), by = cust_id]
setkey(dtnums, cust_id)
# Count total basket, total item, total spend per customer
basket <- dt[,list(num_bask = length(trans_id), num_item = sum(quantity), spend = sum(quantity*price)), by = list(cust_id, prod_cat, prod_id)]
basket <- basket[,list(num_bask = sum(num_bask), num_item = sum(num_item), spend = sum(spend), num_productId = length(prod_id)), by = list(cust_id, prod_cat)]
basket <- basket[,list(num_bask = as.numeric(sum(num_bask)), num_item = as.numeric(sum(num_item)), spend = sum(spend), num_productId = as.numeric(sum(num_productId)), num_productCat = as.numeric(length(prod_cat))), by = cust_id]
setkey(basket, cust_id)
# Distribution of items and spend per customer
dists_ispc <- dt[, list(num_item = sum(quantity), spend = sum(quantity*price)), by = list(trans_date,cust_id)]
dists_ispc <- dists_ispc[,list(ipc_max = max(num_item), ipc_med = median(num_item), ipc_min = min(num_item), spc_max = max(spend), spc_med = median(spend), spc_min = min(spend)), by = cust_id]
setkey(dists_ispc, cust_id)
# Distribution of product_id and product_subclass per customer
dists_pppc <- dt[, list(num_productId = length(prod_id), num_productCat = length(prod_cat)), by = cust_id]
dists_pppc <- dists_pppc[, list(num_productId = as.numeric(sum(num_productId)), num_productCat = as.numeric(sum(num_productCat))), by = cust_id]
dists_pppc <- dists_pppc[, list(productId_min = min(num_productId),productId_med = median(num_productId), productId_max = max(num_productId), productCat_min = min(num_productCat), productCat_med = median(num_productCat), productCat_max = max(num_productCat)), by = cust_id]
setkey(dists_pppc, cust_id)
# Average duration between visits
custday <- dt[,list(nbaskpd=as.numeric(length(trans_id))),by=list(cust_id,trans_date)]
setkeyv(custday,c("cust_id","trans_date"))
difme <- function(x){
d <- diff(c(NA,x))
dd <- d/86400
return(dd)
}
custday[,dif:=difme(trans_date),by=cust_id]
avedurs <- custday[,list(dur_max=max(dif,na.rm=T),dur_med=median(dif,na.rm=T)
,dur_min=min(dif,na.rm=T)
#,baskpd_max=max(nbaskpd),baskpd_med=median(nbaskpd)#,baskpd_min=min(nbaskpd)
),by=cust_id]
avedurs[is.na(dur_med),c("dur_max","dur_min"):=list(NA,NA)]
# When customers visit one time only, the value will be NA in avedurs variable
# We will impute the NA value base on the global mean and SD
ave_imp <- data.table(imputeData(avedurs[,list(dur_max,dur_med,dur_min)]))
avedurs <- data.table(avedurs[, list(cust_id)], ave_imp)
setkey(avedurs, cust_id)
# Finding prop. of baskets in N bands of products cats and ids by imtem and by price
# Create classification of product_id at product_cat level
popcatid <- dt[,list(nbask=length(trans_id)),by=list(prod_cat,prod_id)]
popcat <- popcatid[,list(nbask=sum(nbask),nprodid=length(prod_id)),by=prod_cat]
popcat[, popcat_nbask:= LETTERS[as.numeric(cut2(nbask, g=5))]]
popcat[, popcat_size:= LETTERS[as.numeric(cut2(nprodid, g=5))]]
# We classify the number of transactions and product_id in each of product subclass
# The letter A shows low and E shows high number of product_id and transactions
# Create classification of number of transaction at product_id level
popid <- popcatid[, list(nbask = sum(nbask)), by = prod_id]
popid[, popid_nbask:= LETTERS[as.numeric(cut2(nbask, g=5))]]
# The letter A shows product that has low transaction, E has highest transaction
# Create classification of price at product_id level
priceid <- dt[, list(avrprice = median(price)), by = prod_id]
priceid[, priceRank:= LETTERS[as.numeric(cut2(avrprice, g =5))]]
# The letter A shows low price of product, E shows high price
# Merge these pop variable back to dt
dtp <- copy(dt)
# Merge popcat
setkey(dtp, prod_cat)
dtpop <- merge(dtp, popcat[,list(prod_cat, popcat_nbask, popcat_size)])
dtpop[, length(trans_id), by = popcat_size]
# Merge popid
setkey(dtp, prod_id)
setkey(dtpop, prod_id)
dtpop <- merge(dtpop, popid[, list(prod_id, popid_nbask)])
# Merge priceid
dtpop <- merge(dtpop,priceid[,list(prod_id,priceRank)])
View(dtpop)
dtpop_popcat_nbask <- data.table(dcast(dtpop,cust_id~popcat_nbask,value.var="trans_id"))
View(dtpop_popcat_nbask)
dtpop_popcat_size <- data.table(dcast(dtpop,cust_id~popcat_size,value.var="trans_id"))
dtpop_popid_nbask <- data.table(dcast(dtpop,cust_id~popid_nbask,value.var="trans_id"))
dtpop_prodprice <- data.table(dcast(dtpop,cust_id~prodid_pricerank,value.var="trans_id"))
dtpop_prodprice <- data.table(dcast(dtpop,cust_id~priceRank,value.var="trans_id"))
rm(dat1, dat2, dat3, dat4)
View(dtpop_popcat_nbask)
setkey(dtpop_popcat_nbask,cust_id)
setkey(dtpop_popcat_size,cust_id)
setkey(dtpop_popid_nbask,cust_id)
setkey(dtpop_prodprice,cust_id)
setnames(dtpop_popcat_nbask, c("cust_id", "popcat_nbaskA", "popcat_nbaskB", "popcat_nbaskC", "popcat_nbaskD", "popcat_nbaskE"))
View(dtpop_popcat_nbask)
setnames(dtpop_popcat_size, c("cust_id", "popcat_sizeA", "popcat_sizeB", "popcat_sizeC", "popcat_sizeD", "popcat_sizeE"))
setnames(dtpop_popid_nbask, c("cust_id", "popid_nbaskA", "popid_nbaskB", "popid_nbaskC", "popid_nbaskD", "popid_nbaskE"))
setnames(dtpop_prodprice, c("cust_id", "poppriceA", "poppriceB", "poppriceC", "poppriceD", "poppriceE"))
View(basket)
View(dtnums)
tfcust <- merge(dtnums, basket)
View(tfcust)
View(ave_imp)
View(avedurs)
tfcust <- merge(tfcust, avedurs)
tfcust <- merge(tfcust, dists_ispc)
tfcust <- merge(tfcust, dists_pppc)
View(tfcust)
?merge
tfcust <- merge(tfcust, dtpop_popcat_nbask)
View(tfcust)
tfcust <- merge(tfcust, dtpop_popcat_nbask, all.x = T)
View(tfcust)
tfcust <- merge(tfcust, dtpop_popcat_nbask)
tfcust <- merge(tfcust, dtpop_popcat_nbask)
View(tfcust)
rm(tfcust)
tfcust <- merge(dtnums, basket)
tfcust <- merge(tfcust, avedurs)
tfcust <- merge(tfcust, dists_ispc)
tfcust <- merge(tfcust, dists_pppc)
tfcust <- merge(tfcust, dtpop_popcat_nbask)
tfcust <- merge(tfcust, dtpop_popcat_size)
tfcust <- merge(tfcust, dtpop_popid_nbask)
tfcust <- merge(tfcust, dtpop_prodprice)
View(dists_ispc)
View(dists_pppc)
dists_pppc <- dt[, list(num_productId = length(prod_id)), by = list(cust_id, prod_cat)]
dists_pppc <- dists_pppc[, list(num_productId = sum(num_productId), num_productCat = length(prod_Cat)), by = list(trans_date,cust_id)]
dists_pppc <- dt[, list(num_productId = length(prod_id)), by = list(cust_id,trans_date, prod_cat)]
dists_pppc <- dists_pppc[, list(num_productId = sum(num_productId), num_productCat = length(prod_Cat)), by = list(trans_date,cust_id)]
dists_pppc <- dists_pppc[, list(num_productId = sum(num_productId), num_productCat = length(prod_cat)), by = list(trans_date,cust_id)]
dists_pppb[,c("num_productId","num_productCat"):=list(as.numeric(num_productId),as.numeric(num_productCat))]
dists_pppc[,c("num_productId","num_productCat"):=list(as.numeric(num_productId),as.numeric(num_productCat))]
dists_pppc <- dists_pppc[, list(productCat_min = min(num_productCat), productCat_med = median(num_productCat), productCat_max = max(num_productCat)), by = cust_id]
setkey(dists_pppc, cust_id)
rm(tfcust)
tfcust <- merge(dtnums, basket)
tfcust <- merge(tfcust, avedurs)
tfcust <- merge(tfcust, dists_ispc)
tfcust <- merge(tfcust, dists_pppc)
tfcust <- merge(tfcust, dtpop_popcat_nbask)
tfcust <- merge(tfcust, dtpop_popcat_size)
tfcust <- merge(tfcust, dtpop_popid_nbask)
tfcust <- merge(tfcust, dtpop_prodprice)
View(dists_pppc)
